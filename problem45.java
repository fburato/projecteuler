/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
*/

class Problem45 {
  public static long triangular(long n) {
    return n*(n+1) / 2;
  }

  public static long pentagonal(long n) {
    return n*(3*n-1)/2;
  }
  
  public static long hexagonal(long n) {
    return n*(2*n-1);
  }

  public static boolean isPentagonal(long i) {
    if(i < 0) return false;
    long n = (long) Math.sqrt(2*((double)i)/3);
    long pentagonal = pentagonal(n);;
    while(pentagonal < i) {
      n++;
      pentagonal = pentagonal(n);
    }
    return pentagonal == i;
  }
  
  public static boolean isTriangular(long i) {
    if(i < 0) return false;
    long n = (long) Math.sqrt(2*i);
    long triangular = triangular(n);
    while(triangular > i) {
      n--;
      triangular = triangular(n);
    }
    return triangular == i;
  }
  
  public static boolean isHexagonal(long i) {
    if(i < 0) return false;
    long n = (long) Math.sqrt(((double) i )/2);
    long hexagonal = hexagonal(n);
    while(hexagonal < i) {
      n++;
      hexagonal = hexagonal(n);
    }
    return hexagonal == i;
  }
  
  public static void main(String argv[]) {
    long n = -1;
    long hex;
    for(long i = 144; n == -1 && i > 0; ++i) {
      hex = hexagonal(i);
      if(isTriangular(hex) && isPentagonal(hex)) {
        n = i;
      }
    }
    if(n == -1) {
      System.out.println("overflow");
    } else {
      System.out.println(hexagonal(n));
    }
  }
}
